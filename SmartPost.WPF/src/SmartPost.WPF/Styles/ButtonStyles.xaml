<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="MinimizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                        Background="#12191F"
                        CornerRadius="50">
                        <Path Fill="#768C9E" Data="{DynamicResource minus}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#2C3848"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#12191F"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#2c3848"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="MaximizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                        Background="#12191F"
                        CornerRadius="50">
                        <Path Fill="#768C9E" 
                          Data="{DynamicResource maximize}" Height="10" Width="10" Stretch="UniformToFill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#2C3848"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="False">
                        <Setter TargetName="B" Property="Background" Value="#939393"/>
                    </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#2c3848"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                        Background="#12191F"
                        CornerRadius="50" Padding="0">
                        <Path Fill="#768C9E"
                          Data="{DynamicResource x}" Height="10" Width="10" Stretch="UniformToFill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="red"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#12191F"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="SideBarButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="70"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" CornerRadius="10" Background="{TemplateBinding Background}" 
                            Height="70" 
                            Width="200" VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Margin="15 0 0 0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="icon" Grid.Column="0"
                              Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                              Fill="#edf6f9"
                              Height="30" Width="30"
                              Stretch="Fill"
                              HorizontalAlignment="Left" Margin="10 0"/>

                            <Label x:Name="Lbl" Grid.Column="1" Content="{TemplateBinding Content}" Foreground="#fdfcdc"
                               FontSize="18" FontFamily="{TemplateBinding FontFamily}"
                               VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#fdfcdc" TargetName="Lbl"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="B" Property="Background" Value="{DynamicResource RadioBUttonMouseOverBackground}"/>-->
                            <Setter TargetName="B" Property="Background" Value="black"/>
                            <Setter Property="Foreground" Value="#212529" TargetName="Lbl"/>

                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="True">
                        -->
                        <!--<Setter TargetName="B" Property="Background" Value="{DynamicResource RadioButtonBackGround}"/>-->
                        <!--
                        <Setter TargetName="B" Property="Background" Value="blue"/>
                        <Setter TargetName="icon" Property="Fill" Value="White"/>
                        <Setter Property="Foreground" Value="{DynamicResource profexINFObackgr}" TargetName="Lbl"/>

                        <Trigger Property="IsMouseOver" Value="True">
                            -->
                        <!--<Setter TargetName="B" Property="Background" Value="{DynamicResource RadioBUttonMouseOverBackground}"/>-->
                        <!--
                            <Setter TargetName="B" Property="Background" Value="blue"/>
                        <Setter Property="Foreground" Value="{DynamicResource profexINFObackgr}" TargetName="Lbl"/>

                    </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            -->
                        <!--<Setter TargetName="B" Property="Background" Value="{DynamicResource RadioButtonBackGround}"/>-->
                        <!--
                            <Setter TargetName="B" Property="Background" Value="blue"/>
                            <Setter TargetName="icon" Property="Fill" Value="White"/>
                            <Setter Property="Foreground" Value="{DynamicResource profexINFObackgr}" TargetName="Lbl"/>


                    </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>